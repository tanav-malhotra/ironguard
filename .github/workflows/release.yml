name: release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Prepare artifacts
        run: |
          mkdir -p dist
          cp target/x86_64-unknown-linux-gnu/release/ironguard dist/ironguard-linux-x86_64
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: dist/ironguard-linux-x86_64

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - run: cargo build --release --target x86_64-pc-windows-msvc
      - name: Prepare artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target\x86_64-pc-windows-msvc\release\ironguard.exe dist\ironguard-windows-x86_64.exe
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: dist/ironguard-windows-x86_64.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Extract release notes from CHANGELOG.md (tags only)
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          echo "Extracting notes for $VERSION"
          awk -v ver="## ${VERSION}" 'BEGIN{found=0} {
            if ($0 ~ "^"ver) {found=1; next}
            if (found && $0 ~ /^## /) { exit }
            if (found) print
          }' CHANGELOG.md > notes.txt || true
          if [ ! -s notes.txt ]; then
            echo "No changelog section found for ${VERSION}." > notes.txt
          fi
      - name: Create Release for tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/linux/ironguard-linux-x86_64
            dist/windows/ironguard-windows-x86_64.exe
          body_path: notes.txt
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create prerelease on push to main
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: beta-${{ github.run_number }}
          name: beta ${{ github.run_number }}
          files: |
            dist/linux/ironguard-linux-x86_64
            dist/windows/ironguard-windows-x86_64.exe
          body: |
            Automated prerelease for ${{ github.sha }}
          draft: false
          prerelease: true
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


