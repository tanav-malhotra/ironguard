#!/bin/bash
######################################################################################
# Author: Tanav Malhotra (GitHub: https://github.com/tanav-malhotra)
# Email: tanavm2009@gmail.com
# License: GNU General Public License v3.0
# Copyright (c) 2024 Tanav Malhotra
#
# This script is licensed under the GNU General Public License v3.0.
# You may obtain a copy of the license at:
#   https://www.gnu.org/licenses/gpl-3.0.html
#
# The script is provided "as-is", without any warranty of any kind,
# express or implied, including but not limited to the implied warranties
# of merchantability and fitness for a particular purpose. See the GPL-3.0
# for full details.
#
# You can also view the license by running the `debian.sh` script
# with the '--license' option.
######################################################################################

##### CHECK FOR SUDO #####
if [[ $EUID -ne 0 ]]; then
    echo "\`sudo\` access is required. Please run \`sudo !!\`"
    exit 1
fi

##### MALWARE SCAN #####
echo "Finding potential malware..."
apt install -y aide chkrootkit rkhunter clamav clamav-daemon
echo "Running \`chkrootkit\`..."
chkrootkit
echo "Running \`rkhunter --update\`..."
cat > /etc/default/rkhunter << EOF
CRON_DAILY_RUN="yes"
CRON_DB_UPDATE="yes"
APT_AUTOGEN="yes"
REPORT_EMAIL="root"
EOF
rkhunter --update
echo "Running \`rkhunter --check\`..."
rkhunter --check
echo "Running \`rkhunter --propupd\`..."
rkhunter --propupd
echo "Running \`rkhunter -c --enable all --disable none\`..."
rkhunter -c --enable all --disable none
echo "Running \`freshclam\`..."
freshclam
echo "Running \`clamscan -r --bell -i /\`..."
clamscan -r --bell -i /
read -r -p "Do you want to delete the infected files? (Y/n): " choice
echo -e "\a" & # ring terminal bell
if [[ "$choice" =~ ^[Nn]$ ]]; then
    echo "No action taken."
else
    echo "Deleting infected files..."
    clamscan -r --remove /
    echo "Infected files deleted."
fi
echo "Checking file integrity (requires AIDE setup)..."
echo "Installing AIDE..."
echo "Configuring AIDE for CyberPatriot..."
cat > /etc/aide/aide.conf <<EOF
# AIDE configuration for CyberPatriot
database = /var/lib/aide/aide.db
database_out = /var/lib/aide/aide.db.new
gzip_dbout = yes

# Exclude some directories that may change frequently
exclude = /tmp
exclude = /var/tmp
exclude = /var/log
exclude = /var/run
exclude = /var/cache

# Directories to be monitored - add more as needed
dir = /etc
dir = /bin
dir = /sbin
dir = /usr
dir = /lib
dir = /lib64
dir = /root
dir = /home
dir = /opt
dir = /var/spool
dir = /var/lib
dir = /var/opt

# Files to be monitored - add more as needed
file = /etc/passwd
file = /etc/shadow
file = /etc/group
file = /etc/gshadow
file = /etc/hostname
file = /etc/hosts
file = /etc/sudoers
EOF
echo "AIDE configuration complete."
echo "Initializing AIDE database..."
aideinit
mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
echo "\`aide --check\`..."
log "Press 'Enter' to continue..."; read
aide --check
echo "Scan completed. Check output for details."

##### WISH GOOD LUCK #####
echo;echo;echo;
echo "Thank you for using this script. Good luck for the competition!"
echo
echo "==================================="
echo "Copyright (c) 2024 Tanav Malhotra"
echo "GNU General Public License v3.0"
echo "==================================="
echo
exit 0